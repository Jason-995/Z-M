### 锚点区
PROXY: &PROXY {type: select, proxies: [Choose, 香港, 新加坡, 日本, 台湾, 美国, 全部, 直连]}
DIRECT: &DIRECT {type: select, proxies: [直连, Choose, 香港, 新加坡, 日本, 台湾, 美国, 全部]}
All: &Include_all {type: select, proxies: [Choose, 香港, 新加坡, 日本, 台湾, 美国, 全部, 直连], include-all: true, exclude-filter: "(?i)(直连)"}
PP: &PP {type: http, interval: 86400, health-check: {enable: true, url: 'https://www.gstatic.com/generate_204', interval: 300}}
FilterHK: &FilterHK '^(?=.*(?i)(港|🇭🇰|HK|Hong|HKG))(?!.*(排除1|排除2|5x)).*$'
FilterSG: &FilterSG '^(?=.*(?i)(坡|🇸🇬|SG|Sing|SIN|XSP))(?!.*(排除1|排除2|5x)).*$'
FilterJP: &FilterJP '^(?=.*(?i)(日|🇯🇵|JP|Japan|NRT|HND|KIX|CTS|FUK))(?!.*(排除1|排除2|5x)).*$'
FilterUS: &FilterUS '^(?=.*(?i)(美|🇺🇸|US|USA|JFK|LAX|ORD|ATL|DFW|SFO|MIA|SEA|IAD))(?!.*(排除1|排除2|5x)).*$'
FilterTW: &FilterTW '^(?=.*(?i)(台|🇼🇸|🇹🇼|TW|tai|TPE|TSA|KHH))(?!.*(排除1|排除2|5x)).*$'
UrlTest: &UrlTest {type: url-test, interval: 60, tolerance: 20, lazy: true, url: 'https://www.gstatic.com/generate_204', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all: true}
LoadBalanceCH: &LoadBalanceCH {type: load-balance, interval: 60, lazy: true, url: 'https://www.gstatic.com/generate_204', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, hidden: true, include-all: true}

### 订阅链接
proxy-providers:
  P1: {<<: *PP, url: '机场订阅地址'}

### 全局配置
mode: rule
port: 7890
socks-port: 7891
redir-port: 7892
mixed-port: 7893
tproxy-port: 7895
ipv6: true
allow-lan: true
unified-delay: true
tcp-concurrent: true
log-level: warning
bind-address: "*"
find-process-mode: 'off'
global-client-fingerprint: chrome
keep-alive-interval: 15
keep-alive-idle: 600
authentication:
  - mihomo:yyds666
skip-auth-prefixes:
  - 192.168.1.0/24
  - 192.168.12.0/24
  - fe80::/128
  - 127.0.0.1/8

external-ui-url: https://github.com/Zephyruso/zashboard/releases/latest/download/dist.zip
external-ui-name: zashboard
external-ui: ui
external-controller: 0.0.0.0:9090
secret: ""

profile:
  store-selected: true
  store-fake-ip: true

sniffer:
  enable: true
  override-destination: false
  force-dns-mapping: true
  parse-pure-ip: true

tun:
  enable: true
  stack: mixed
  dns-hijack:
    - "any:53"
    - "tcp://any:53"
  auto-route: true
  auto-redirect: true
  auto-detect-interface: true

dns:
  enable: true
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 198.18.0.1/16
  fake-ip-filter:
    - rule-set:private_domain
    - rule-set:cn_domain
    - "*"
    - "+.lan"
    - "+.local"
    - "*.apple.com"
    - "*.wechat.com"
    - "*.qpic.cn"
    - "*.qq.com"
    - "*.wechatapp.com"
    - +.docker.io
    - +.push.apple.com
    - "+.market.xiaomi.com"
  default-nameserver:
    - tls://223.5.5.5
    - tls://223.6.6.6
  nameserver:
    - https://doh.pub/dns-query
    - https://dns.alidns.com/dns-query

proxies: 
  - name: "直连"
    type: direct
    udp: true

proxy-groups:
### 策略组
  - name: Choose
    type: select
    proxies: [香港, 新加坡, 日本, 台湾, 美国, 全部]
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Static_1.png

  - name: AIGC
    <<: *PROXY
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/AI.png

  - name: Emby
    <<: *PROXY
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Emby.png

  - name: Streaming
    <<: *PROXY
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Streaming.png

  - name: Telegram
    <<: *PROXY
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png
  
  - name: Games 
    <<: *PROXY
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Game.png

  - name: YouTube 
    <<: *PROXY
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube.png

  - name: Google 
    <<: *PROXY
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png

  - name: Microsoft 
    <<: *PROXY
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Microsoft.png

  - name: Apple 
    <<: *DIRECT
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Apple_1.png

### 其他策略组
  - name: 全部
    type: select
    include-all: true
    tolerance: 20
    interval: 300
    exclude-filter: "(?i)(直连)"
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Clubhouse.png
  - name: Final
    type: select
    proxies: [Choose, 直连]
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Final.png

### 地区策略组
  - name: 香港
    type: select
    proxies: [香港自动, 香港均衡]
    include-all: true
    filter: *FilterHK
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/HK.png
  - name: 新加坡
    type: select
    proxies: [新加坡自动, 新加坡均衡]
    include-all: true
    filter: *FilterSG
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/SG.png
  - name: 日本
    type: select
    proxies: [日本自动, 日本均衡]
    include-all: true
    filter: *FilterJP
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/JP.png
  - name: 美国
    type: select
    proxies: [美国自动, 美国均衡]
    include-all: true
    filter: *FilterUS
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/US.png
  - name: 台湾
    type: select
    proxies: [台湾自动, 台湾均衡]
    include-all: true
    filter: *FilterTW
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/TW.png

### 地区自动策略组
  - name: 香港自动
    <<: *UrlTest
    filter: *FilterHK
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Urltest.png
  - name: 新加坡自动
    <<: *UrlTest
    filter: *FilterSG
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Urltest.png
  - name: 日本自动
    <<: *UrlTest
    filter: *FilterJP
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Urltest.png
  - name: 美国自动
    <<: *UrlTest
    filter: *FilterUS
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Urltest.png
  - name: 台湾自动
    <<: *UrlTest
    filter: *FilterTW
    icon: https://raw.githubusercontent.com/Orz-3/mini/master/Color/Urltest.png

### 地区均衡策略组
  - name: 香港均衡
    <<: *LoadBalanceCH
    filter: *FilterHK
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Round_Robin_1.png
  - name: 新加坡均衡
    <<: *LoadBalanceCH
    filter: *FilterSG
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Round_Robin_1.png
  - name: 日本均衡
    <<: *LoadBalanceCH
    filter: *FilterJP
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Round_Robin_1.png
  - name: 美国均衡
    <<: *LoadBalanceCH
    filter: *FilterUS
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Round_Robin_1.png
  - name: 台湾均衡
    <<: *LoadBalanceCH
    filter: *FilterTW
    icon: https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Round_Robin_1.png


rules:
  - DOMAIN-SUFFIX,micu.hk,DIRECT
  - RULE-SET,private_ip,直连,no-resolve
  - RULE-SET,Ai,AIGC
  - RULE-SET,emby_domain,Emby
  - RULE-SET,steam_cn_domain,直连
  - RULE-SET,steamcdn_domain,直连
  - RULE-SET,apple_cn_domain,直连
  - RULE-SET,apple_fw_domain,Apple
  - RULE-SET,apple_domain,Apple
  - RULE-SET,onedrive_domain,Microsoft
  - RULE-SET,microsoft_domain,Microsoft
  - RULE-SET,microsoft_cn,直连
  - RULE-SET,ins_domain,Choose
  - RULE-SET,github_domain,Choose
  - RULE-SET,youtube_domain,YouTube
  - RULE-SET,google_domain,Google
  - RULE-SET,telegram_domain,Telegram
  - RULE-SET,netflix_domain,Streaming
  - RULE-SET,bilibili_domain,直连
  - RULE-SET,game_domain,Games
  - RULE-SET,game_cn_domain,直连
  - RULE-SET,cn_domain,直连
  - RULE-SET,geolocation-!cn,Choose
# IP
  - RULE-SET,emby_ip,Emby,no-resolve
  - RULE-SET,steamcdn_ip,直连,no-resolve
  - RULE-SET,google_ip,Google,no-resolve
  - RULE-SET,netflix_ip,Streaming,no-resolve
  - RULE-SET,telegram_ip,Telegram,no-resolve
  - RULE-SET,cn_ip,直连,no-resolve
  - MATCH,Final

rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  ip_text: &ip_text {type: http, interval: 86400, behavior: ipcidr, format: text}
  ip_yaml: &ip_yaml {type: http, interval: 86400, behavior: ipcidr, format: yaml}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  domain_text: &domain_text {type: http, interval: 86400, behavior: domain, format: text}
  domain_yaml: &domain_yaml {type: http, interval: 86400, behavior: domain, format: yaml}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
  class_yaml: &class_yaml {type: http, interval: 86400, behavior: classical, format: yaml}

rule-providers:
  Ai:               {<<: *domain, url: https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/ai.mrs}
  private_domain:   {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs}
  steam_cn_domain:  {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/steam%40cn.mrs}
  steamcdn_domain:  {<<: *domain, url: https://raw.githubusercontent.com/Lanlan13-14/Rules/refs/heads/main/rules/Domain/Steam-domain.mrs}
  steam_domain:     {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/steam.mrs}
  emby_domain:      {<<: *domain, url: https://raw.githubusercontent.com/Lanlan13-14/Rules/refs/heads/main/rules/Domain/emby.mrs}
  apple_fw_domain:  {<<: *domain, url: https://raw.githubusercontent.com/Lanlan13-14/Rules/refs/heads/main/rules/Domain/applefirmware.mrs}
  apple_domain:     {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple.mrs}
  apple_cn_domain:  {<<: *domain, url: https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/apple@cn.mrs}
  ins_domain:       {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/instagram.mrs}    
  game_cn_domain:   {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/category-games%40cn.mrs}
  game_domain:      {<<: *domain, url: https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-games.mrs}
  onedrive_domain:  {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs}
  microsoft_domain: {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs}
  microsoft_cn:     {<<: *domain, url: https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/microsoft@cn.mrs}
  cn_domain:        {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs}
  github_domain:    {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs}
  youtube_domain:   {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs}
  google_domain:    {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs}
  telegram_domain:  {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs}
  netflix_domain:   {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs}
  bilibili_domain:  {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/bilibili.mrs}
  geolocation-!cn:  {<<: *domain, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs}
# IP
  steamcdn_ip:     {<<: *ip, url: https://raw.githubusercontent.com/Lanlan13-14/Rules/refs/heads/main/rules/IP/steamCDN-ip.mrs}
  emby_ip:         {<<: *ip, url: https://raw.githubusercontent.com/Lanlan13-14/Rules/refs/heads/main/rules/IP/emby-ip.mrs}
  private_ip:      {<<: *ip, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/private.mrs}
  cn_ip:           {<<: *ip, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs}
  google_ip:       {<<: *ip, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs}
  netflix_ip:      {<<: *ip, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs}
  telegram_ip:     {<<: *ip, url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs}
